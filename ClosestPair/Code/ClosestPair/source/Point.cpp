//===============================================================================
// @ Point.h
// 
// Description
// ------------------------------------------------------------------------------
// CopyRight Danilo José Guerrero Rodríguez
//
//
//
//===============================================================================

//-------------------------------------------------------------------------------
//-- Dependencies ---------------------------------------------------------------
//-------------------------------------------------------------------------------
#include "stdafx.h"
#include <Point.h>
#include <math.h>
#include <algorithm>
//-------------------------------------------------------------------------------
//-- Static Members -------------------------------------------------------------
//-------------------------------------------------------------------------------

Point Point::xAxis( 1.0f, 0.0f, 0.0f );
Point Point::yAxis( 0.0f, 1.0f, 0.0f );
Point Point::zAxis( 0.0f, 0.0f, 1.0f );
Point Point::origin( 0.0f, 0.0f, 0.0f );
Point Point::cornerPoint(-1000.0f,-1000.0f,-1000.0f);

//-------------------------------------------------------------------------------
//-- Methods --------------------------------------------------------------------
//-------------------------------------------------------------------------------

//-------------------------------------------------------------------------------
// @ Point::Point()
//-------------------------------------------------------------------------------
// Copy constructor
//-------------------------------------------------------------------------------
Point::Point(const Point& other) : 
    x( other.x ),
    y( other.y ),
    z( other.z )
{

}  


//-------------------------------------------------------------------------------
// @ Point::operator=()
//-------------------------------------------------------------------------------
// Assignment operator
//-------------------------------------------------------------------------------
Point& Point::operator=(const Point& other)
{
    // if same object
    if ( this == &other )
        return *this;
        
    x = other.x;
    y = other.y;
    z = other.z;
    
    return *this;

}   

//-------------------------------------------------------------------------------
// @ ::Distance()
//-------------------------------------------------------------------------------
// Point distance
//-------------------------------------------------------------------------------
float Point::Distance( const Point& anotherPoint )
{
    float x = this->x - anotherPoint.GetX();
    float y = this->y - anotherPoint.GetY();
    float z = this->z - anotherPoint.GetZ();

    return sqrtf( x*x + y*y + z*z );

}   


//-------------------------------------------------------------------------------
// @ ::CuadraticDistance()
//-------------------------------------------------------------------------------
// Point cuadratic distance
//-------------------------------------------------------------------------------
float Point::CuadraticDistance(const Point& anotherPoint)
{
	float x = this->x - anotherPoint.GetX();
	float y = this->y - anotherPoint.GetY();
	float z = this->z - anotherPoint.GetZ();

	return (x*x + y*y + z*z);

}